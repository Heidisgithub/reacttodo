{"version":3,"sources":["Header.js","TaskItem.js","OpenTasks.js","CloseTasks.js","Stats.js","TasksWrapper.js","index.js"],"names":["Header","className","htmlFor","type","id","name","value","React","Component","TaskItem","this","props","dividedTasks","map","task","done","onChange","handleTaskToggle","console","log","defaultChecked","title","OpenTasks","state","newTask","handleNewTaskInput","bind","handleSubmit","event","setState","target","preventDefault","createTask","content","openTasks","tasks","filter","length","onClick","CloseTasks","closeTasks","Stats","allTasksLength","openTasksLength","TasksWrapper","handleCreateTask","toDoX","tasksUpdate","newTodos","todo","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.412bca96.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n      <h1>Our To-Do-List</h1>\r\n\r\n      <div className=\"darkmode\">\r\n          <label htmlFor=\"darkMode\">Dark Mode</label>\r\n          <input type=\"checkbox\" id=\"darkMode\" name=\"darkMode\" value=\"on\" />\r\n      </div>\r\n  </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nclass TaskItem extends React.Component {\r\n    render() {\r\n        return (\r\n            this.props.dividedTasks.map((task) => {\r\n                return (<div className={\"taskItem\" + (task.done ? ' done' : '')} key={\"task\" + task.id} id={\"task\" + task.id}>\r\n                    <label className=\"container taskCheck\">\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            onChange={\r\n                                () => {\r\n                                    this.props.handleTaskToggle(task.id)\r\n                                    console.log(\"Toggle for\" + task.id)\r\n                                }}\r\n                            defaultChecked={task.done}\r\n                        />\r\n                        {task.title}\r\n                        <span className=\"checkmark\"></span>\r\n                    </ label>\r\n                    <div className=\"buttons\">\r\n                        {\r\n                            task.done ? '' : <div type=\"button\" value=\"Edit\" className=\"icon edit\" ></div>\r\n                        }\r\n                        <div type=\"button\" value=\"Delete\" className=\"icon delete\" ></div>\r\n\r\n                    </div>\r\n                </div>\r\n                )\r\n            })\r\n        )\r\n    }\r\n}\r\n\r\nexport default TaskItem;","\r\nimport React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\n\r\nclass OpenTasks extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { newTask: \"\" };\r\n    this.handleNewTaskInput = this.handleNewTaskInput.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleNewTaskInput(event) {\r\n    this.setState({ newTask: event.target.value })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const newTask = this.state.newTask\r\n    if (!newTask) {\r\n      return;\r\n    }\r\n    this.props.createTask(this.state.newTask);\r\n    console.log(event.target.value);\r\n    this.setState({ newTask: \"\" })\r\n  }\r\n\r\n\r\n  render() {\r\n    const openTasks = this.props.tasks.filter(tasks => tasks.done === false);\r\n    let content\r\n    if (openTasks.length === 0) {\r\n      content = <div className=\"noTaskLeft noOpen\"></div>\r\n    } else {\r\n      content = <TaskItem\r\n        dividedTasks={openTasks}\r\n        handleTaskToggle={this.props.handleTaskToggle} />\r\n\r\n    }\r\n\r\n    return (<div className=\"openContainer\" >\r\n      <div className=\"containerTitle\" >\r\n        <h3 >\r\n          Open\r\n        </h3>\r\n        <div className=\"taskForm\">\r\n          <input type=\"text\" name=\"taskBox\" id=\"taskBox\" value={this.state.newTask} onChange={this.handleNewTaskInput} />\r\n          <div type=\"button\" name=\"taskBox\" className=\"icon add\" id=\"createTask\" onClick={this.handleSubmit}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"tasks\" >\r\n        {content}\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenTasks;","import React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nclass CloseTasks extends React.Component {\r\n  render() {\r\n    const closeTasks = this.props.tasks.filter(tasks => tasks.done === true);\r\n    return (\r\n      <div className=\"doneContainer\">\r\n        <div className=\"containerTitle\">\r\n          <h3>Closed</h3></div>\r\n        <div className=\"tasks\">\r\n          <TaskItem \r\n            dividedTasks={closeTasks} \r\n            handleTaskToggle={this.props.handleTaskToggle}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CloseTasks;\r\n","import React from \"react\";\r\n\r\nclass Stats extends React.Component {\r\n  \r\n  render() {\r\n    const allTasksLength = this.props.tasks.length\r\n    const openTasks = this.props.tasks.filter(task => task.done === false);\r\n    const openTasksLength = openTasks.length;\r\n\r\n    return (\r\n      <div className=\"statsContainer\">\r\n        <div className=\"containerTitle\">\r\n          <h3>Stats</h3>\r\n        </div>\r\n        <div className=\"counters\">\r\n          <div className=\"count\">\r\n            <strong>{openTasksLength}</strong> <br /> open Tasks\r\n          </div>\r\n          <div className=\"count\">\r\n            <strong>{allTasksLength-openTasksLength}</strong> <br /> done Tasks\r\n          </div>\r\n          <div className=\"count\">\r\n            <strong>{allTasksLength}</strong> <br /> all Tasks\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport OpenTasks from \"./OpenTasks\";\r\nimport CloseTasks from \"./CloseTasks\";\r\nimport Stats from \"./Stats\";\r\n\r\nclass TasksWrapper extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks: [\r\n                {\r\n                    title: \"do something\",\r\n                    done: false,\r\n                    id: 0\r\n                },\r\n                {\r\n                    title: \"anything\",\r\n                    done: false,\r\n                    id: 1\r\n                },\r\n                {\r\n                    title: \"nothing\",\r\n                    done: true,\r\n                    id: 2\r\n                },\r\n                {\r\n                    title: \"something\",\r\n                    done: true,\r\n                    id: 3\r\n                },\r\n                {\r\n                    title: \"new one\",\r\n                    done: false,\r\n                    id: 4\r\n                }\r\n            ]\r\n\r\n        }\r\n        this.handleCreateTask = this.handleCreateTask.bind(this);\r\n        this.handleTaskToggle = this.handleTaskToggle.bind(this);\r\n    }\r\n\r\n    handleCreateTask(newTask) {\r\n        let toDoX = {\r\n            title: newTask,\r\n            done: false,\r\n            id: this.state.tasks.length\r\n        }\r\n        const tasksUpdate = [...this.state.tasks, toDoX];\r\n        this.setState({ tasks: tasksUpdate });\r\n        console.log(this.state.tasks)\r\n    }\r\n\r\n    handleTaskToggle(id) {\r\n        const newTodos = this.state.tasks.map((todo) => {\r\n            if (todo.id !== id) {\r\n                return todo;\r\n            }\r\n\r\n            const newTodosObj = { ...todo, done: !todo.done };\r\n            return newTodosObj;\r\n        });\r\n        this.setState({ tasks: newTodos });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            < main className=\"tasksFlex\" >\r\n                <div className=\"tasksWrapper\" >\r\n                    <OpenTasks\r\n                        tasks={this.state.tasks}\r\n                        createTask={this.handleCreateTask}\r\n                        handleTaskToggle={this.handleTaskToggle}\r\n                    />\r\n                    <CloseTasks\r\n                        tasks={this.state.tasks}\r\n                        handleTaskToggle={this.handleTaskToggle}\r\n                    />\r\n                </div>\r\n                <Stats tasks={this.state.tasks} />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TasksWrapper;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Header from \"./Header\";\r\nimport TasksWrapper from \"./TasksWrapper\";\r\n\r\n\r\nconst element = (\r\n  <div>\r\n    <Header />\r\n    <TasksWrapper />\r\n  </div>\r\n);\r\n\r\nReactDOM.render(element, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}