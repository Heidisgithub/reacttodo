{"version":3,"sources":["Header.js","DeleteModal.js","TaskItem.js","EditTask.js","OpenTasks.js","CloseTasks.js","Stats.js","TasksWrapper.js","TasksApp.js","index.js"],"names":["Header","console","log","this","props","checked","htmlFor","className","type","id","name","onChange","handleDarkMode","React","Component","DeleteModal","state","title","currentTaskTitle","currentTaskId","handleSubmit","bind","event","preventDefault","handleDeleteTask","onSubmit","value","onClick","TaskItem","taskdata","taskDeleteMode","handleToggleDeleteMode","done","handleTaskToggle","defaultChecked","handleTaskInEdit","EditTask","handleTitleChange","handleEnterEdit","setState","target","handleEditTask","key","autoFocus","onKeyPress","OpenTasks","newTask","inDelete","handleNewTaskInput","handleEnterNewTask","createTask","content","openTasks","tasks","filter","length","map","task","taskInEdit","taskInDelete","CloseTasks","closeTasks","Stats","allTasksLength","openTasksLength","TasksWrapper","handleCreateTask","storedData","localStorage","getItem","JSON","parse","setItem","stringify","toDoX","Date","now","tasksUpdate","taskData","newTasks","newTodos","todo","TasksApp","darkMode","newDarkMode","window","darkModeStorage","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.72da705c.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    console.log(\"renderingheader \" + this.props.checked);\r\n    return (\r\n      <header>\r\n        <h1>Our To-Do-List</h1>\r\n\r\n        <div>\r\n          <label htmlFor=\"darkMode\">Dark Mode</label>\r\n          <input\r\n            className=\"checkDarkMode\"\r\n            type=\"checkbox\"\r\n            checked={this.props.checked}\r\n            id=\"darkMode\"\r\n            name=\"darkMode\"\r\n            onChange={this.props.handleDarkMode}\r\n          />\r\n        </div>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nclass DeleteModal extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title: this.props.currentTaskTitle,\r\n            id: this.props.currentTaskId\r\n        };\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n      }\r\n    \r\n    \r\n      handleSubmit(event) {\r\n        event.preventDefault();\r\n        console.log(`title: ${this.state.title}`);\r\n        this.props.handleDeleteTask(this.state.id);\r\n      }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"taskItem\">\r\n            <form onSubmit={this.handleSubmit} >\r\n              <label className=\"container\">\r\n                Are you sure?\r\n              </label>\r\n              <div className=\"buttons\">\r\n              <button className=\"icon\" type=\"submit\" value=\"Delete\">Delete</button>\r\n              <div onClick={() => this.props.handleDeleteTask(null)} className=\"icon abort\">\r\n              </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeleteModal;","import React from \"react\";\r\nimport DeleteModal from \"./DeleteModal\"\r\n\r\nclass TaskItem extends React.Component {\r\n    render() {\r\n        let taskItem\r\n        if (this.props.taskdata.id === this.props.taskDeleteMode) {\r\n           taskItem = <DeleteModal\r\n                            handleDeleteTask={this.props.handleDeleteTask}\r\n                            currentTaskId={this.props.taskdata.id}\r\n                            currentTaskTitle={this.props.taskdata.title}\r\n                            key={this.props.taskdata.id}\r\n                            handleToggleDeleteMode={this.props.handleToggleDeleteMode}\r\n                        />\r\n                }\r\n\r\n            else {\r\n            taskItem = <div className={\"taskItem\" + (this.props.taskdata.done ? ' done' : '')} key={\"task\" + this.props.taskdata.id} id={\"task\" + this.props.taskdata.id}>\r\n                <label className=\"container taskCheck\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        onChange={\r\n                            () => {\r\n                                this.props.handleTaskToggle(this.props.taskdata.id)\r\n                                console.log(\"Toggle for\" + this.props.taskdata.id)\r\n                            }}\r\n                        defaultChecked={this.props.taskdata.done}\r\n                    />\r\n                    {this.props.taskdata.title}\r\n                    <span className=\"checkmark\"></span>\r\n                </ label>\r\n                <div className=\"buttons\">\r\n                    {\r\n                        this.props.taskdata.done ? '' : <div\r\n                            type=\"button\"\r\n                            value=\"Edit\"\r\n                            className=\"icon edit\"\r\n                            onClick={() => this.props.handleTaskInEdit(this.props.taskdata.id)}>\r\n                        </div>\r\n                    }\r\n                    <div type=\"button\" value=\"Delete\" className=\"icon delete\" onClick={() => {\r\n                        this.props.handleToggleDeleteMode(this.props.taskdata.id)\r\n                        console.log(this.props.taskdata.id)\r\n                        console.log(this.props.taskDeleteMode)\r\n                    }} ></div>\r\n                </div>\r\n            </div>\r\n             }\r\n        return taskItem\r\n\r\n    }\r\n}\r\n\r\nexport default TaskItem;","import React from \"react\";\r\n\r\nclass EditTask extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: this.props.taskdata.title,\r\n      done: this.props.taskdata.done,\r\n      id: this.props.taskdata.id\r\n    };\r\n    this.handleTitleChange = this.handleTitleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleEnterEdit = this.handleEnterEdit.bind(this);\r\n  }\r\n\r\n  handleTitleChange(event) {\r\n    this.setState({ title: event.target.value });\r\n    console.log(this.state);\r\n  }\r\n\r\n  handleSubmit() {\r\n    this.props.handleEditTask(this.state);\r\n  }\r\n\r\n  handleEnterEdit(event) {\r\n    if(event.key === \"Enter\"){\r\n        this.handleSubmit(event)\r\n      }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div className=\"taskItem\" id={\"task\" + this.props.taskdata.id}>\r\n        <div className=\"editWrapper\">\r\n            <div>\r\n                <input \r\n                    type=\"text\"\r\n                    autoFocus \r\n                    id=\"editBox\" \r\n                    value={this.state.title}\r\n                    onChange={this.handleTitleChange}\r\n                    onKeyPress={this.handleEnterEdit} \r\n                />\r\n            </div>\r\n        </div>\r\n        <div className=\"buttons\">\r\n            <div \r\n                onClick={this.handleSubmit}\r\n                className=\"icon save\" \r\n                type=\"button\">\r\n            </div>\r\n            <div \r\n                onClick={() => this.props.handleTaskInEdit(null)} \r\n                className=\"icon abort\" \r\n                type=\"button\">\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditTask;\r\n","\r\nimport React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\nimport EditTask from \"./EditTask\"\r\n\r\n\r\nclass OpenTasks extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { \r\n      newTask: \"\",\r\n      inDelete: null };\r\n    this.handleNewTaskInput = this.handleNewTaskInput.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n    this.handleEnterNewTask = this.handleEnterNewTask.bind(this);\r\n  }\r\n\r\n  handleNewTaskInput(event) {\r\n    this.setState({ newTask: event.target.value })\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const newTask = this.state.newTask\r\n    if (!newTask) {\r\n      return;\r\n    }\r\n    this.props.createTask(this.state.newTask);\r\n    console.log(event.target.value);\r\n    this.setState({ newTask: \"\" })\r\n  }\r\n\r\n  handleEnterNewTask(event){\r\n    if(event.key === \"Enter\"){\r\n      this.handleSubmit(event)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const openTasks = this.props.tasks.filter(tasks => tasks.done === false);\r\n    let content\r\n    if (openTasks.length === 0) {\r\n      content = <div className=\"noTaskLeft noOpen\"></div>\r\n    } else {\r\n      content = openTasks.map((task) => {\r\n          if (task.id === this.props.taskInEdit) {\r\n            return (\r\n              <EditTask\r\n                taskdata={task}\r\n                handleTaskToggle={this.props.handleTaskToggle}\r\n                handleTaskInEdit={this.props.handleTaskInEdit}\r\n                handleEditTask={this.props.handleEditTask}\r\n                key={task.id}\r\n              />\r\n            )\r\n          }\r\n          return (\r\n            <TaskItem\r\n              taskdata={task}\r\n              handleTaskToggle={this.props.handleTaskToggle}\r\n              handleTaskInEdit={this.props.handleTaskInEdit}\r\n              handleEditTask={this.props.handleEditTask}\r\n              key={task.id}\r\n              taskDeleteMode={this.props.taskInDelete}\r\n              handleDeleteTask={this.props.handleDeleteTask} \r\n              handleToggleDeleteMode={this.props.handleToggleDeleteMode}\r\n            />\r\n          )\r\n        }\r\n      )\r\n    }\r\n\r\n    return (<div className=\"openContainer\" >\r\n      <div className=\"containerTitle\" >\r\n        <h3 >\r\n          Open\r\n        </h3>\r\n        <div className=\"taskForm\">\r\n          <input type=\"text\" name=\"taskBox\" id=\"taskBox\" value={this.state.newTask} onChange={this.handleNewTaskInput} onKeyPress={this.handleEnterNewTask} />\r\n          <div type=\"button\" name=\"taskBox\" className=\"icon add\" id=\"createTask\" onClick={this.handleSubmit}>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"tasks\" >\r\n        {content}\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default OpenTasks;","import React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nclass CloseTasks extends React.Component {\r\n  render() {\r\n    const closeTasks = this.props.tasks.filter(tasks => tasks.done === true);\r\n    let content\r\n    if (closeTasks.length === 0) {\r\n      content = <div className=\"noTaskLeft noClosed\"></div>\r\n    } else {\r\n      content = closeTasks.map((task) => {\r\n        return (\r\n          <TaskItem\r\n            taskdata={task}\r\n            taskDeleteMode={this.props.taskInDelete}\r\n            handleTaskToggle={this.props.handleTaskToggle}\r\n            handleDeleteTask={this.props.handleDeleteTask} \r\n            handleToggleDeleteMode={this.props.handleToggleDeleteMode} \r\n            key={task.id} \r\n          />\r\n        )\r\n      })\r\n\r\n    }\r\n    return (<div className=\"doneContainer\" >\r\n      <div className=\"containerTitle\" >\r\n        <h3 >\r\n          Closed\r\n        </h3>\r\n      </div>\r\n      <div className=\"tasks\" >\r\n        {content}\r\n      </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CloseTasks;\r\n","import React from \"react\";\r\n\r\nclass Stats extends React.Component {\r\n  \r\n  render() {\r\n    const allTasksLength = this.props.tasks.length\r\n    const openTasks = this.props.tasks.filter(task => task.done === false);\r\n    const openTasksLength = openTasks.length;\r\n\r\n    return (\r\n      <div className=\"statsContainer\">\r\n        <div className=\"containerTitle\">\r\n          <h3>Stats</h3>\r\n        </div>\r\n        <div className=\"counters\">\r\n          <div className=\"count\">\r\n            <strong>{openTasksLength}</strong> <br /> open Tasks\r\n          </div>\r\n          <div className=\"count\">\r\n            <strong>{allTasksLength-openTasksLength}</strong> <br /> done Tasks\r\n          </div>\r\n          <div className=\"count\">\r\n            <strong>{allTasksLength}</strong> <br /> all Tasks\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport OpenTasks from \"./OpenTasks\";\r\nimport CloseTasks from \"./CloseTasks\";\r\nimport Stats from \"./Stats\";\r\n\r\nclass TasksWrapper extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            taskInEdit: null,\r\n            tasks: [],\r\n            taskDeleteMode: null\r\n\r\n        }\r\n        this.handleCreateTask = this.handleCreateTask.bind(this);\r\n        this.handleTaskToggle = this.handleTaskToggle.bind(this);\r\n        this.handleTaskInEdit = this.handleTaskInEdit.bind(this);\r\n        this.handleEditTask = this.handleEditTask.bind(this);\r\n        this.handleDeleteTask = this.handleDeleteTask.bind(this);\r\n        this.handleToggleDeleteMode = this.handleToggleDeleteMode.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const storedData = localStorage.getItem(\"toDoTasks\")\r\n        if (storedData) {\r\n            this.setState({tasks: JSON.parse(storedData)})\r\n        }\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        localStorage.setItem('toDoTasks', JSON.stringify(this.state.tasks))\r\n    }\r\n\r\n    handleCreateTask(newTask) {\r\n        let toDoX = {\r\n            title: newTask,\r\n            done: false,\r\n            id: Date.now()\r\n        }\r\n        const tasksUpdate = [...this.state.tasks, toDoX];\r\n        this.setState({ tasks: tasksUpdate });\r\n        console.log(this.state.tasks)\r\n    }\r\n\r\n    handleTaskInEdit(id) {\r\n        this.setState({ taskInEdit: id });\r\n    }\r\n\r\n    handleEditTask(taskData) {\r\n        const newTasks = this.state.tasks.map((task) => {\r\n          if (task.id !== taskData.id) {\r\n            return task;\r\n          }\r\n          return {\r\n            ...task,\r\n            title: taskData.title,\r\n          };\r\n        });\r\n        this.setState({ tasks: newTasks, taskInEdit: null });\r\n    }\r\n\r\n    handleTaskToggle(id) {\r\n        const newTodos = this.state.tasks.map((todo) => {\r\n            if (todo.id !== id) {\r\n                return todo;\r\n            }\r\n\r\n            const newTodosObj = { ...todo, done: !todo.done };\r\n            return newTodosObj;\r\n        });\r\n        this.setState({ tasks: newTodos });\r\n    }\r\n\r\n// Handle Delete Stuff\r\n\r\n  handleDeleteTask(id) {\r\n    const newTodos = this.state.tasks.filter((task) => task.id !== id);\r\n    this.setState({ tasks: newTodos, taskDeleteMode: null });\r\n  }\r\n\r\n  handleToggleDeleteMode(id){\r\n      this.setState({taskDeleteMode: id})\r\n  }\r\n\r\n\r\n// Handle Delete Stuff\r\n\r\n    render() {\r\n        return (\r\n            < main className=\"tasksFlex\" >\r\n                <div className=\"tasksWrapper\" >\r\n                    <OpenTasks\r\n                        tasks={this.state.tasks}\r\n                        taskInEdit={this.state.taskInEdit}\r\n                        createTask={this.handleCreateTask}\r\n                        handleTaskToggle={this.handleTaskToggle}\r\n                        handleTaskInEdit={this.handleTaskInEdit}\r\n                        handleEditTask={this.handleEditTask}\r\n                        handleDeleteTask={this.handleDeleteTask}\r\n                        handleToggleDeleteMode={this.handleToggleDeleteMode}\r\n                        taskInDelete={this.state.taskDeleteMode}\r\n                    />\r\n                    <CloseTasks\r\n                        tasks={this.state.tasks}\r\n                        taskInDelete={this.state.taskDeleteMode}\r\n                        handleTaskToggle={this.handleTaskToggle}\r\n                        handleDeleteTask={this.handleDeleteTask}\r\n                        handleToggleDeleteMode={this.handleToggleDeleteMode}\r\n                    />\r\n                </div>\r\n                <Stats tasks={this.state.tasks} />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TasksWrapper;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport TasksWrapper from \"./TasksWrapper\";\r\n\r\nclass TasksApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      darkMode: false,\r\n    };\r\n    this.handleDarkMode = this.handleDarkMode.bind(this);\r\n  }\r\n  handleDarkMode() {\r\n    const newDarkMode = !this.state.darkMode;\r\n    this.setState({ darkMode: newDarkMode });\r\n    window.localStorage.setItem(\"darkMode\", newDarkMode)\r\n  }\r\n\r\n  componentDidMount() {\r\n    let darkModeStorage = (window.localStorage.getItem(\"darkMode\") === \"true\")\r\n    console.log(darkModeStorage)\r\n      this.setState({ darkMode: darkModeStorage });\r\n    \r\n  }\r\n\r\n  \r\n\r\n  render() {\r\n    let darkMode = \"\";\r\n    if (this.state.darkMode) {\r\n      darkMode = \"darkMode\";\r\n    }\r\n    console.log(\"renderingwithdarkmode \" + this.state.darkMode)\r\n    return (\r\n      <div className={darkMode}>\r\n        <Header\r\n          handleDarkMode={this.handleDarkMode}\r\n          checked={this.state.darkMode}\r\n        />\r\n        <TasksWrapper />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default TasksApp;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport TasksApp from \"./TasksApp\";\r\n\r\n\r\n \r\n\r\nReactDOM.render(<TasksApp/>, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}