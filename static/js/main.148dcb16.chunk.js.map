{"version":3,"sources":["Header.js","TaskItem.js","OpenTasks.js","CloseTasks.js","Stats.js","TasksWrapper.js","index.js"],"names":["Header","className","htmlFor","type","id","name","value","React","Component","TaskItem","this","props","dividedTasks","map","task","index","title","OpenTasks","state","newTask","handleNewTaskInput","bind","handleSubmit","event","setState","target","preventDefault","createTask","console","log","content","openTasks","tasks","filter","done","length","onChange","onClick","CloseTasks","closeTasks","Stats","allTasksLength","openTasksLength","TasksWrapper","handleCreateTask","toDoX","tasksUpdate","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.148dcb16.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n\r\nclass Header extends React.Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n      <h1>Our To-Do-List</h1>\r\n\r\n      <div className=\"darkmode\">\r\n          <label htmlFor=\"darkMode\">Dark Mode</label>\r\n          <input type=\"checkbox\" id=\"darkMode\" name=\"darkMode\" value=\"on\" />\r\n      </div>\r\n  </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nclass TaskItem extends React.Component {\r\n    render() {\r\n        return(\r\n        this.props.dividedTasks.map((task, index) => {\r\n        return (<div className=\"taskItem \" key={\"task\" + index} id={\"task\" + index}>\r\n                <label className=\"container taskCheck\">\r\n                    <input type=\"checkbox\" />\r\n                    {task.title}\r\n                    <span className=\"checkmark\"></span>\r\n                </ label>\r\n                <div className=\"buttons\">\r\n                    <div type=\"button\" value=\"Edit\" className=\"icon edit\" ></div>\r\n                    <div type=\"button\" value=\"Delete\" className=\"icon delete\" ></div>\r\n\r\n                </div>\r\n            </div>\r\n        )})\r\n        )}\r\n}\r\n\r\nexport default TaskItem;","import React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\n\r\nclass OpenTasks extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {newTask: \"\"};\r\n    this.handleNewTaskInput = this.handleNewTaskInput.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleNewTaskInput(event){\r\nthis.setState({newTask: event.target.value})\r\n}\r\n\r\nhandleSubmit(event){\r\n  event.preventDefault();\r\n  const newTask = this.state.newTask\r\n  if (!newTask) {\r\n    return;}\r\n  this.props.createTask(this.state.newTask);\r\n  console.log( event.target.value);\r\n  this.setState({newTask: \"\"})\r\n}\r\n\r\n\r\n    render() {\r\n      const openTasks = this.props.tasks.filter(tasks => tasks.done === false);\r\n      let content\r\n      if (openTasks.length === 0){\r\n      content = <div className=\"noTaskLeft noOpen\"></div>\r\n      } else {\r\n        content = <TaskItem dividedTasks={openTasks} />\r\n\r\n      }\r\n\r\n        return ( <div className = \"openContainer\" >\r\n            <div className = \"containerTitle\" >\r\n              <h3 > \r\n                Open \r\n              </h3> \r\n              <div className=\"taskForm\">\r\n                <input type=\"text\" name=\"taskBox\" id=\"taskBox\" value={this.state.newTask} onChange={this.handleNewTaskInput} />\r\n                <div type=\"button\" name=\"taskBox\" className=\"icon add\" id=\"createTask\" onClick={this.handleSubmit}>\r\n                </div>\r\n              </div> \r\n            </div> \r\n            <div className = \"tasks\" >\r\n            {content}\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default OpenTasks;","import React from \"react\";\r\nimport TaskItem from \"./TaskItem\";\r\n\r\nclass CloseTasks extends React.Component {\r\n  render() {\r\n    const closeTasks = this.props.tasks.filter(tasks => tasks.done === true);\r\n    return (\r\n      <div className=\"doneContainer\">\r\n        <div className=\"containerTitle\">\r\n          <h3>Closed</h3></div>\r\n        <div className=\"tasks\">\r\n          <TaskItem dividedTasks={closeTasks} />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CloseTasks;\r\n","import React from \"react\";\r\n\r\nclass Stats extends React.Component {\r\n  \r\n  render() {\r\n    const allTasksLength = this.props.tasks.length\r\n    const openTasks = this.props.tasks.filter(task => task.done === false);\r\n    const openTasksLength = openTasks.length;\r\n\r\n    return (\r\n      <div className=\"statsContainer\">\r\n        <div className=\"containerTitle\">\r\n          <h3>Stats</h3>\r\n        </div>\r\n        <div className=\"counters\">\r\n          <div className=\"count\">\r\n            <strong>{openTasksLength}</strong> <br /> open Tasks\r\n          </div>\r\n          <div className=\"count\">\r\n            <strong>{allTasksLength-openTasksLength}</strong> <br /> done Tasks\r\n          </div>\r\n          <div className=\"count\">\r\n            <strong>{allTasksLength}</strong> <br /> all Tasks\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport OpenTasks from \"./OpenTasks\";\r\nimport CloseTasks from \"./CloseTasks\";\r\nimport Stats from \"./Stats\";\r\n\r\nclass TasksWrapper extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tasks: [\r\n                {\r\n                    title: \"do something\",\r\n                    done: false\r\n                },\r\n                {\r\n                    title: \"anything\",\r\n                    done: false\r\n                },\r\n                {\r\n                    title: \"nothing\",\r\n                    done: true\r\n                },\r\n                {\r\n                    title: \"something\",\r\n                    done: true\r\n                }\r\n              ]\r\n\r\n        }\r\n        this.handleCreateTask = this.handleCreateTask.bind(this);\r\n    }\r\n\r\n    handleCreateTask(newTask) {\r\n      console.log(this.state.tasks)\r\n      let toDoX = {\r\n        title: newTask,\r\n        done: false\r\n      }\r\n      const tasksUpdate = [...this.state.tasks, toDoX];\r\n      this.setState({tasks: tasksUpdate});\r\n  }\r\n\r\n    render() {\r\n        return ( \r\n        < main className = \"tasksFlex\" >\r\n            <div className = \"tasksWrapper\" >\r\n            <OpenTasks tasks={this.state.tasks} createTask={this.handleCreateTask} />\r\n            <CloseTasks tasks={this.state.tasks} />\r\n            </div> \r\n            <Stats tasks={this.state.tasks} />\r\n        </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TasksWrapper;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport Header from \"./Header\";\r\nimport TasksWrapper from \"./TasksWrapper\";\r\n\r\n\r\nconst element = (\r\n  <div>\r\n    <Header />\r\n    <TasksWrapper />\r\n  </div>\r\n);\r\n\r\nReactDOM.render(element, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}